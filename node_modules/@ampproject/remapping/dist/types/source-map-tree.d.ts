import { GenMapping } from '@jridgewell/gen-mapping';
import type { TraceMap } from '@jridgewell/trace-mapping';
<<<<<<< HEAD
export declare type SourceMapSegmentObject = {
    column: number;
    line: number;
    name: string;
    source: string;
    content: string | null;
} | {
    column: null;
    line: null;
    name: null;
    source: null;
    content: null;
};
export declare type OriginalSource = {
    map: TraceMap;
    sources: Sources[];
    source: string;
    content: string | null;
};
export declare type MapSource = {
    map: TraceMap;
    sources: Sources[];
    source: string;
    content: string | null;
};
export declare type Sources = OriginalSource | MapSource;
/**
 * MapSource represents a single sourcemap, with the ability to trace mappings into its child nodes
 * (which may themselves be SourceMapTrees).
 */
export declare function MapSource(map: TraceMap, sources: Sources[]): MapSource;
/**
 * A "leaf" node in the sourcemap tree, representing an original, unmodified source file. Recursive
 * segment tracing ends at the `OriginalSource`.
 */
export declare function OriginalSource(source: string, content: string | null): OriginalSource;
/**
 * traceMappings is only called on the root level SourceMapTree, and begins the process of
 * resolving each mapping in terms of the original source files.
 */
export declare function traceMappings(tree: MapSource): GenMapping;
/**
 * originalPositionFor is only called on children SourceMapTrees. It recurses down into its own
 * child SourceMapTrees, until we find the original source map.
 */
export declare function originalPositionFor(source: Sources, line: number, column: number, name: string): SourceMapSegmentObject | null;
=======
import type OriginalSource from './original-source';
import type { SourceMapSegmentObject } from './types';
declare type Sources = OriginalSource | SourceMapTree;
declare const INVALID_MAPPING: undefined;
declare const SOURCELESS_MAPPING: null;
declare type MappingSource = SourceMapSegmentObject | typeof INVALID_MAPPING | typeof SOURCELESS_MAPPING;
/**
 * traceMappings is only called on the root level SourceMapTree, and begins the process of
 * resolving each mapping in terms of the original source files.
 */
export declare let traceMappings: (tree: SourceMapTree) => TraceMap;
/**
 * SourceMapTree represents a single sourcemap, with the ability to trace
 * mappings into its child nodes (which may themselves be SourceMapTrees).
 */
export declare class SourceMapTree {
    map: TraceMap;
    sources: Sources[];
    constructor(map: TraceMap, sources: Sources[]);
    /**
     * originalPositionFor is only called on children SourceMapTrees. It recurses down
     * into its own child SourceMapTrees, until we find the original source map.
     */
    originalPositionFor(line: number, column: number, name: string): MappingSource;
}
export {};
>>>>>>> 67915e4dd74689288c6073cdcd0538296f4adb5a
